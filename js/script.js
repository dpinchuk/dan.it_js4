/*
 Реализовать функцию для подсчета n-го обобщенного числа Фибоначчи.

 Технические требования:
 - Написать функцию для подсчета n-го обобщенного числа Фибоначчи. Аргументами на вход будут три числа - F0, F1, n,
 где F0, F1 - первые два числа последовательности (могут быть любыми целыми числами), n - порядковый номер числа
 Фибоначчи, которое надо найти. Последовательнось будет строиться по следующему правилу F2 = F0 + F1, F3 = F1 + F2 и так далее.
 - Считать с помощью модального окна браузера число, которое введет пользователь (n).
 - С помощью функции посчитать n-е число в обощенной последовательности Фибоначчи и вывести его на экран.
 - Пользователь может ввести отрицательное число - результат надо посчитать по такому же правилу (F-1 = F-3 + F-2).
 - Использовать синтаксис ES6 для работы с перемеными и функциями.
*/

let f1 = 0;
let f2 = 1;

let getFibonacciNumber = (f1, f2, n) => {
    let arr = [];
    arr[0] = f1;
    arr[1] = f2;
    if (n === 0) {
        return 0;
    } else if (n === 1) {
        return f1;
    } else if (n === 2) {
        return f2;
    } else {
        for (let i = 2; i <= Math.abs(n); i++) {
            arr[i] = arr[i - 2] + arr[i - 1];
        }
        if (n < 0) {
            return Math.pow(-1, Math.abs(n) + 1) * arr[Math.abs(n)];
        }
        return arr[Math.abs(n)];
    }
};

let fn = getFibonacciNumber(f1, f2, prompt("Input n: "));

console.log("Fn = " + fn);